{"version":3,"sources":["../../src/pages/manage-lead/manage-lead.module.ts","../../src/pages/manage-lead/manage-lead.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACD;AAU/C;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QARhC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAc;aACf;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,oEAAc,CAAC;aACzC;SACF,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACZW;AACe;AACM;AACH;AACH;AACe;AAQ1E;IAKE,wBAAmB,OAAsB,EAAS,SAAoB,EAC7D,cAA+B,EAAS,SAAyB,EACjE,IAAmB,EAAQ,KAAa,EAAQ,SAA0B;QAFhE,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAC7D,mBAAc,GAAd,cAAc,CAAiB;QAAS,cAAS,GAAT,SAAS,CAAgB;QACjE,SAAI,GAAJ,IAAI,CAAe;QAAQ,UAAK,GAAL,KAAK,CAAQ;QAAQ,cAAS,GAAT,SAAS,CAAiB;QALnF,UAAK,GAAS,IAAI,CAAC;QACnB,cAAS,GAAS,KAAK,CAAC;IAKxB,CAAC;IAED,uCAAc,GAAd;QAAA,iBAiCC;QAhCC,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAE7C,6BAA6B;QAC7B,IAAI,WAAW,GAAC,EAEf,CAAC;QAEF,EAAE,EAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CACrC,CAAC;YACC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAClD,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,sBAAY;YAEzE,EAAE,EAAC,KAAI,CAAC,cAAc,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,EAAC;gBAChD,KAAI,CAAC,SAAS,CAAC,eAAe,CAAC,cAAc,EAAC,0EAA0E,CAAC,CAAC;gBAC1H,MAAM,CAAC;YACT,CAAC;YAED,EAAE,EAAC,YAAY,CAAC,aAAa,CAAC,IAAG,mBAAmB,CAAC,EAAC;gBACpD,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,MAAM,CAAC;YACT,CAAC;YAED,KAAI,CAAC,KAAK,GAAG,YAAY,CAAC,aAAa,CAAC,CAAC;YAEzC,OAAO,CAAC,KAAK,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC;QAE5B,CAAC,EAAC,eAAK;YACL,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,KAAI,CAAC,SAAS,CAAC,eAAe,CAAC,cAAc,EAAC,KAAK,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACL,CAAC;IAID,oBAAoB;IACpB,mCAAU,GAAV,UAAW,IAAU;QACnB,uCAAuC;QACvC,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,EAAC,EAAC,gBAAgB,EAAC,IAAI,EAAC,CAAC,CAAC;QAChF,SAAS,CAAC,OAAO,EAAE,CAAC;IACtB,CAAC;IApDU,cAAc;QAJ1B,wEAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;WACG;SAChC,CAAC;2KAM4B,CAA0C;YAC5C,4EAAc,2DAAqB,wEAAa;YAC1D,WAAmE;OAPxE,cAAc,CAqD1B;IAAD,CAAC;AAAA;SArDY,cAAc,gB","file":"21.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { ManageLeadPage } from './manage-lead';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ManageLeadPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(ManageLeadPage),\r\n  ],\r\n})\r\nexport class ManageLeadPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/manage-lead/manage-lead.module.ts","import { Codes } from './../../Utils/Codes';\r\nimport { HttpProvider } from './../../providers/data/data';\r\nimport { MessageHelper } from './../../providers/message-helper';\r\nimport { DataValidation } from './../../Utils/DataValidation';\r\nimport { Component, KeyValueDiffers } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, ModalController } from 'ionic-angular';\r\n\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-manage-lead',\r\n  templateUrl: 'manage-lead.html',\r\n})\r\nexport class ManageLeadPage {\r\n\r\n  leads : any = null;\r\n  emptyLead : any = false;\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams,\r\n    public dataValidation : DataValidation, public msgHelper : MessageHelper,\r\n    public http : HttpProvider,public codes : Codes,public modalCtrl: ModalController) {\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    console.log('ionViewDidLoad ManageLeadPage');\r\n\r\n    //Step 1 : Load all the leads\r\n    var requestJson={\r\n      //Empty request json\r\n    };\r\n\r\n    if(this.navParams.get('requestJson'))\r\n    {\r\n      requestJson = this.navParams.get('requestJson');\r\n    }\r\n\r\n    this.http.callApi(requestJson,this.codes.API_SEARCH_LEAD).then(responseJson => {\r\n\r\n      if(this.dataValidation.isEmptyJson(responseJson)){\r\n        this.msgHelper.showErrorDialog('Server error','Empty response received from back end server.Please try after some time.');\r\n        return;\r\n      }\r\n\r\n      if(responseJson['responsemsg'] ==' No Record Found '){\r\n        this.emptyLead = true;\r\n        return;\r\n      }\r\n\r\n      this.leads = responseJson['responsemsg'];\r\n\r\n      console.error(this.leads);\r\n\r\n    },error => {\r\n      console.error(error);\r\n      this.msgHelper.showErrorDialog('Server error',error);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  //Go to details page\r\n  getDetails(lead : any){\r\n    //Call the modal page using the lead Id\r\n    let leadModal = this.modalCtrl.create('LeadDetailPage',{'leadTicketDate':lead});\r\n    leadModal.present();\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/manage-lead/manage-lead.ts"],"sourceRoot":""}