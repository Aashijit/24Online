{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":"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","file":"4.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { LoginPage } from './login';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(LoginPage),\r\n  ],\r\n})\r\nexport class LoginPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Codes } from './../../Utils/Codes';\r\nimport { HttpProvider } from './../../providers/data/data';\r\nimport { MessageHelper } from './../../providers/message-helper';\r\nimport { DataValidation } from './../../Utils/DataValidation';\r\nimport { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\n\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-login',\r\n  templateUrl: 'login.html',\r\n})\r\nexport class LoginPage {\r\n\r\n  //Set to default\r\n  ipAddress : any = \"123.201.20.60\"; \r\n  userName : any = \"avijit.ghosh\";\r\n  password : any = \"avijit.ghosh\";\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams,\r\n    public dataValidation : DataValidation, public msgHelper : MessageHelper,\r\n    public http : HttpProvider,public codes : Codes) {\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    console.log('ionViewDidLoad LoginPage');\r\n  }\r\n\r\n  login(){\r\n\r\n    //Validate the ip address\r\n    if(!this.dataValidation.isValidIpAddress(this.ipAddress)){\r\n      this.msgHelper.showErrorDialog('Alert!','Invalid Ip Address');\r\n      return;\r\n    }\r\n\r\n    //Insert the request into the localstorage\r\n    localStorage.setItem(this.codes.LSK_USERNAME,this.userName);\r\n    localStorage.setItem(this.codes.LSK_PASSWORD,this.password);\r\n\r\n    //Create the request json\r\n    var loginRequestJson = {\r\n      \"username\":this.userName,\r\n      \"Password\":this.password\r\n    };\r\n    \r\n    var loading = this.msgHelper.showWorkingDialog('Authenticating User');\r\n\r\n    localStorage.setItem(this.codes.LSK_IPADDRESS,this.ipAddress);\r\n\r\n    this.http.callApi(loginRequestJson,this.codes.API_AUTHENTICATE_USER).then(responseJson => {\r\n      \r\n      loading.dismiss();\r\n\r\n      if(this.dataValidation.isEmptyJson(responseJson)){\r\n        this.msgHelper.showErrorDialog('Server error','Empty response received from back end server.Please try after some time.');\r\n        return;\r\n      }\r\n\r\n      localStorage.setItem(this.codes.LSK_USER_INFO_PREFERENCES,JSON.stringify(responseJson));\r\n\r\n      this.msgHelper.showToast('Login Successfull !!!');\r\n      \r\n      this.navCtrl.setRoot('DashboardTabPage');\r\n      \r\n    },error => {\r\n        loading.dismiss();\r\n        console.error(error);\r\n        this.msgHelper.showErrorDialog('Server error',error);\r\n    });\r\n\r\n    // this.navCtrl.setRoot(HomePage);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}